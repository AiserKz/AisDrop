import React, { useState, useEffect } from 'react';
import { Marker, useMapEvents, useMap } from 'react-leaflet';

const LocationPicker = ({ onLocationChange }) => {
    const [position, setPosition] = useState(null);
    const map = useMap();

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–µ
    useMapEvents({
        click(e) {
            const coords = e.latlng;
            setPosition(coords);
            onLocationChange(coords);
        },
    });

    // –§—É–Ω–∫—Ü–∏—è: –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞—Ä–∫–µ—Ä
    const detectLocation = () => {
        if (!navigator.geolocation) {
            alert('–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é');
            return;
        }
          const confirmed = window.confirm(
            "–ú—ã –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å —Ç–æ—á–∫—É –Ω–∞ –∫–∞—Ä—Ç–µ. –†–∞–∑—Ä–µ—à–∏—Ç—å?"
        );
        if (!confirmed) return;

        navigator.geolocation.getCurrentPosition(
            (pos) => {
                const coords = {
                    lat: pos.coords.latitude,
                    lng: pos.coords.longitude,
                };
                setPosition(coords);
                onLocationChange(coords);
                map.setView(coords, 13);
            },
            (err) => {
                if (err.code === 1) {
                    console.warn('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª –≤ –¥–æ—Å—Ç—É–ø–µ –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏');
                } else {
                    console.warn('–û—à–∏–±–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', err.message);
                }
            }
        );
    };

    return (
        <>
            {position && <Marker position={position} />}
            <button
                type="button"
                onClick={detectLocation}
                style={{
                    position: 'absolute',
                    top: '10px',
                    right: '10px',
                    zIndex: 1000,
                }}
                className='bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow'
            >
                üìç –£–∫–∞–∑–∞—Ç—å –º–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
            </button>
        </>
    );
};

export default LocationPicker;
